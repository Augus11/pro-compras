{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\components\\\\Cart\\\\Payment.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport { size } from \"lodash\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { paymentCartApi, deleteCartApi } from \"../../api/cart\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { STRAPI_PUBLISHABLE_KEY } from \"../../utils/constants\";\nimport { formStyle } from \"../../styles\";\nimport colors from \"../../styles/colors\";\n\nvar stripe = require(\"stripe-client\")(STRAPI_PUBLISHABLE_KEY);\n\nexport default function Payment(props) {\n  var totalPayment = props.totalPayment,\n      selectedAddress = props.selectedAddress,\n      products = props.products;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  var navigation = useNavigation();\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function onSubmit(formData) {\n      var result, response;\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(stripe.createToken({\n                card: formData\n              }));\n\n            case 2:\n              result = _context.sent;\n              setLoading(true);\n\n              if (!(result != null && result.error)) {\n                _context.next = 9;\n                break;\n              }\n\n              Toast.show(result.error.message, {\n                position: Toast.positions.CENTER\n              });\n              setLoading(false);\n              _context.next = 21;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(paymentCartApi(auth, result.id, products, selectedAddress));\n\n            case 11:\n              response = _context.sent;\n\n              if (!(size(response) > 0)) {\n                _context.next = 19;\n                break;\n              }\n\n              console.log(\"Pedido completado\");\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(deleteCartApi());\n\n            case 16:\n              navigation.navigate(\"account\", {\n                screen: \"orders\"\n              });\n              _context.next = 21;\n              break;\n\n            case 19:\n              Toast.show(\"Error al realizar el pedid\", {\n                position: Toast.positions.CENTER\n              });\n              setLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  });\n  return React.createElement(View, {\n    style: styles.continer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Forma de pago\"), React.createElement(TextInput, {\n    label: \"Nombre de la tarjeta\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"name\", text);\n    },\n    value: formik.values.name,\n    error: formik.errors.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Numero de tarjeta\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"number\", text);\n    },\n    value: formik.values.number,\n    error: formik.errors.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.containerInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.containerMonthYearInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Mes\",\n    style: styles.inputDate,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"exp_month\", text);\n    },\n    value: formik.values.exp_month,\n    error: formik.errors.exp_month,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"A\\xF1o\",\n    style: styles.inputDate,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"exp_year\", text);\n    },\n    value: formik.values.exp_year,\n    error: formik.errors.exp_year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    label: \"CVV/CVC\",\n    style: styles.inputCvc,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"cvc\", text);\n    },\n    value: formik.values.cvc,\n    error: formik.errors.cvc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    mode: \"contained\",\n    contentStyle: styles.btnContent,\n    labelStyle: styles.btnText,\n    onPress: formik.handleSubmit,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Pagar \", totalPayment && \"(\" + totalPayment + \" \\u20AC)\"));\n}\n\nfunction initialValues() {\n  return {\n    number: \"\",\n    exp_month: \"\",\n    exp_year: \"\",\n    cvc: \"\",\n    name: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    number: Yup.string().min(16).max(16).required(true),\n    exp_month: Yup.string().min(2).max(2).required(true),\n    exp_year: Yup.string().min(2).max(2).required(true),\n    cvc: Yup.string().min(3).max(3).required(true),\n    name: Yup.string().min(6).required(true)\n  };\n}\n\nvar styles = StyleSheet.create({\n  continer: {\n    marginTop: 40,\n    marginBottom: 30\n  },\n  containerTitle: {\n    paddingBottom: 10,\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  containerInputs: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  inputCvc: {\n    width: \"40%\"\n  },\n  containerMonthYearInputs: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\"\n  },\n  inputDate: {\n    width: 100,\n    marginRight: 10\n  },\n  btnContent: {\n    paddingVertical: 4,\n    backgroundColor: colors.primary\n  },\n  btnText: {\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/components/Cart/Payment.js"],"names":["React","useState","TextInput","Button","useFormik","Yup","Toast","size","useNavigation","paymentCartApi","deleteCartApi","useAuth","STRAPI_PUBLISHABLE_KEY","formStyle","colors","stripe","require","Payment","props","totalPayment","selectedAddress","products","loading","setLoading","auth","navigation","formik","initialValues","validationSchema","object","onSubmit","formData","createToken","card","result","error","show","message","position","positions","CENTER","id","response","console","log","navigate","screen","styles","continer","containerTitle","input","text","setFieldValue","values","name","errors","number","containerInputs","containerMonthYearInputs","inputDate","exp_month","exp_year","inputCvc","cvc","btnContent","btnText","handleSubmit","string","min","max","required","StyleSheet","create","marginTop","marginBottom","paddingBottom","fontSize","fontWeight","flexDirection","justifyContent","alignItems","width","marginRight","paddingVertical","backgroundColor","primary"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport { size } from \"lodash\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { paymentCartApi, deleteCartApi } from \"../../api/cart\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { STRAPI_PUBLISHABLE_KEY } from \"../../utils/constants\";\nimport { formStyle } from \"../../styles\";\nimport colors from \"../../styles/colors\";\nconst stripe = require(\"stripe-client\")(STRAPI_PUBLISHABLE_KEY);\n\nexport default function Payment(props) {\n  const { totalPayment, selectedAddress, products } = props;\n  const [loading, setLoading] = useState(false);\n  const { auth } = useAuth();\n  const navigation = useNavigation();\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      const result = await stripe.createToken({ card: formData });\n      setLoading(true);\n\n      if (result?.error) {\n        Toast.show(result.error.message, {\n          position: Toast.positions.CENTER,\n        });\n        setLoading(false);\n      } else {\n        const response = await paymentCartApi(\n          auth,\n          result.id,\n          products,\n          selectedAddress\n        );\n\n        if (size(response) > 0) {\n          console.log(\"Pedido completado\");\n          await deleteCartApi();\n          navigation.navigate(\"account\", { screen: \"orders\" });\n        } else {\n          Toast.show(\"Error al realizar el pedid\", {\n            position: Toast.positions.CENTER,\n          });\n          setLoading(false);\n        }\n      }\n    },\n  });\n\n  return (\n    <View style={styles.continer}>\n      <Text style={styles.containerTitle}>Forma de pago</Text>\n      <TextInput\n        label=\"Nombre de la tarjeta\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"name\", text)}\n        value={formik.values.name}\n        error={formik.errors.name}\n      />\n      <TextInput\n        label=\"Numero de tarjeta\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"number\", text)}\n        value={formik.values.number}\n        error={formik.errors.number}\n      />\n      <View style={styles.containerInputs}>\n        <View style={styles.containerMonthYearInputs}>\n          <TextInput\n            label=\"Mes\"\n            style={styles.inputDate}\n            onChangeText={(text) => formik.setFieldValue(\"exp_month\", text)}\n            value={formik.values.exp_month}\n            error={formik.errors.exp_month}\n          />\n          <TextInput\n            label=\"Año\"\n            style={styles.inputDate}\n            onChangeText={(text) => formik.setFieldValue(\"exp_year\", text)}\n            value={formik.values.exp_year}\n            error={formik.errors.exp_year}\n          />\n        </View>\n        <TextInput\n          label=\"CVV/CVC\"\n          style={styles.inputCvc}\n          onChangeText={(text) => formik.setFieldValue(\"cvc\", text)}\n          value={formik.values.cvc}\n          error={formik.errors.cvc}\n        />\n      </View>\n\n      <Button\n        mode=\"contained\"\n        contentStyle={styles.btnContent}\n        labelStyle={styles.btnText}\n        onPress={formik.handleSubmit}\n        loading={loading}\n      >\n        Pagar {totalPayment && `(${totalPayment} €)`}\n      </Button>\n    </View>\n  );\n}\n\nfunction initialValues() {\n  return {\n    number: \"\",\n    exp_month: \"\",\n    exp_year: \"\",\n    cvc: \"\",\n    name: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    number: Yup.string().min(16).max(16).required(true),\n    exp_month: Yup.string().min(2).max(2).required(true),\n    exp_year: Yup.string().min(2).max(2).required(true),\n    cvc: Yup.string().min(3).max(3).required(true),\n    name: Yup.string().min(6).required(true),\n  };\n}\n\nconst styles = StyleSheet.create({\n  continer: {\n    marginTop: 40,\n    marginBottom: 30,\n  },\n  containerTitle: {\n    paddingBottom: 10,\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  containerInputs: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  inputCvc: {\n    width: \"40%\",\n  },\n  containerMonthYearInputs: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n  },\n  inputDate: {\n    width: 100,\n    marginRight: 10,\n  },\n  btnContent: {\n    paddingVertical: 4,\n    backgroundColor: colors.primary,\n  },\n  btnText: {\n    fontSize: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}