{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { API_URL } from \"../utils/constants\";\nexport function addAddressApi(auth, address) {\n  var url, params, response, result;\n  return _regeneratorRuntime.async(function addAddressApi$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          url = API_URL + \"/addresses\";\n          params = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + auth.token\n            },\n            body: JSON.stringify(_objectSpread({\n              user: auth.idUser\n            }, address))\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, params));\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result);\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", null);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n}\nexport function getAddressesApi(auth) {\n  var url, params, response, result;\n  return _regeneratorRuntime.async(function getAddressesApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          url = API_URL + \"/addresses?user=\" + auth.idUser;\n          params = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + auth.token\n            }\n          };\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, params));\n\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result);\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", null);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n}\nexport function deleteAddressApi(auth, idAddress) {\n  var url, params, response, result;\n  return _regeneratorRuntime.async(function deleteAddressApi$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          url = API_URL + \"/addresses/\" + idAddress;\n          params = {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + auth.token\n            }\n          };\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, params));\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", result);\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", null);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n}\nexport function getAddressApi(auth, idAddress) {\n  var url, params, response, result;\n  return _regeneratorRuntime.async(function getAddressApi$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          url = API_URL + \"/addresses/\" + idAddress;\n          params = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + auth.token\n            }\n          };\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, params));\n\n        case 5:\n          response = _context4.sent;\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", result);\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", null);\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n}\nexport function updateAddressApi(auth, address) {\n  var url, params, response, result;\n  return _regeneratorRuntime.async(function updateAddressApi$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          url = API_URL + \"/addresses/\" + address._id;\n          params = {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + auth.token\n            },\n            body: JSON.stringify(address)\n          };\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, params));\n\n        case 5:\n          response = _context5.sent;\n          _context5.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          result = _context5.sent;\n          return _context5.abrupt(\"return\", result);\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", null);\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n}","map":{"version":3,"sources":["C:/Users/Patricia/Desktop/Nueva carpeta/pro-compras/src/api/address.js"],"names":["API_URL","addAddressApi","auth","address","url","params","method","headers","Authorization","token","body","JSON","stringify","user","idUser","fetch","response","json","result","console","log","getAddressesApi","deleteAddressApi","idAddress","getAddressApi","updateAddressApi","_id"],"mappings":"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","sourcesContent":["import { API_URL } from \"../utils/constants\";\n\nexport async function addAddressApi(auth, address) {\n  try {\n    const url = `${API_URL}/addresses`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${auth.token}`,\n      },\n      body: JSON.stringify({ user: auth.idUser, ...address }),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getAddressesApi(auth) {\n  try {\n    const url = `${API_URL}/addresses?user=${auth.idUser}`;\n    const params = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${auth.token}`,\n      },\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function deleteAddressApi(auth, idAddress) {\n  try {\n    const url = `${API_URL}/addresses/${idAddress}`;\n    const params = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${auth.token}`,\n      },\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getAddressApi(auth, idAddress) {\n  try {\n    const url = `${API_URL}/addresses/${idAddress}`;\n    const params = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${auth.token}`,\n      },\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function updateAddressApi(auth, address) {\n  try {\n    const url = `${API_URL}/addresses/${address._id}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${auth.token}`,\n      },\n      body: JSON.stringify(address),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}