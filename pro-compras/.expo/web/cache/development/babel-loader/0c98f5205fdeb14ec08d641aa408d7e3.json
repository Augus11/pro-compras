{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\components\\\\Auth\\\\RegisterForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport { registerApi } from \"../../api/user\";\nimport { formStyle } from \"../../styles\";\nexport default function RegisterForm(props) {\n  var setShowLogin = props.setShowLogin;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var showLogin = function showLogin() {\n    return setShowLogin(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function onSubmit(formData) {\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(registerApi(formData));\n\n            case 4:\n              showLogin();\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              Toast.show(\"Error al registrar el usuario\", {\n                position: Toast.positions.CENTER\n              });\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }\n  });\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"email\", text);\n    },\n    value: formik.values.email,\n    error: formik.errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Nombre de usuario\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"username\", text);\n    },\n    value: formik.values.username,\n    error: formik.errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Contrase\\xF1a\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"password\", text);\n    },\n    value: formik.values.password,\n    error: formik.errors.password,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Repetir contrase\\xF1a\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"repeatPassword\", text);\n    },\n    value: formik.values.repeatPassword,\n    error: formik.errors.repeatPassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: formStyle.btnSucces,\n    onPress: formik.handleSubmit,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Registrarse\"), React.createElement(Button, {\n    mode: \"text\",\n    style: formStyle.btnText,\n    labelStyle: formStyle.btnTextLabel,\n    onPress: showLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Iniciar Sesi\\xF3n\"));\n}\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email().required(true),\n    username: Yup.string().required(true),\n    password: Yup.string().required(true),\n    repeatPassword: Yup.string().required(true).oneOf([Yup.ref(\"password\")], true)\n  };\n}","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/components/Auth/RegisterForm.js"],"names":["React","useState","TextInput","Button","useFormik","Yup","Toast","registerApi","formStyle","RegisterForm","props","setShowLogin","loading","setLoading","showLogin","prevState","formik","initialValues","validationSchema","object","onSubmit","formData","show","position","positions","CENTER","input","text","setFieldValue","values","email","errors","username","password","repeatPassword","btnSucces","handleSubmit","btnText","btnTextLabel","string","required","oneOf","ref"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport { registerApi } from \"../../api/user\";\nimport { formStyle } from \"../../styles\";\n\nexport default function RegisterForm(props) {\n  const { setShowLogin } = props;\n  const [loading, setLoading] = useState(false);\n\n  const showLogin = () => setShowLogin((prevState) => !prevState);\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      try {\n        await registerApi(formData);\n        showLogin();\n      } catch (error) {\n        Toast.show(\"Error al registrar el usuario\", {\n          position: Toast.positions.CENTER,\n        });\n        setLoading(false);\n      }\n    },\n  });\n\n  return (\n    <View>\n      <TextInput\n        label=\"Email\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"email\", text)}\n        value={formik.values.email}\n        error={formik.errors.email}\n      />\n      <TextInput\n        label=\"Nombre de usuario\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"username\", text)}\n        value={formik.values.username}\n        error={formik.errors.username}\n      />\n      <TextInput\n        label=\"Contraseña\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"password\", text)}\n        value={formik.values.password}\n        error={formik.errors.password}\n        secureTextEntry\n      />\n      <TextInput\n        label=\"Repetir contraseña\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"repeatPassword\", text)}\n        value={formik.values.repeatPassword}\n        error={formik.errors.repeatPassword}\n        secureTextEntry\n      />\n      <Button\n        mode=\"contained\"\n        style={formStyle.btnSucces}\n        onPress={formik.handleSubmit}\n        loading={loading}\n      >\n        Registrarse\n      </Button>\n      <Button\n        mode=\"text\"\n        style={formStyle.btnText}\n        labelStyle={formStyle.btnTextLabel}\n        onPress={showLogin}\n      >\n        Iniciar Sesión\n      </Button>\n    </View>\n  );\n}\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email().required(true),\n    username: Yup.string().required(true),\n    password: Yup.string().required(true),\n    repeatPassword: Yup.string()\n      .required(true)\n      .oneOf([Yup.ref(\"password\")], true),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}