{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthScreen from \"./src/screens/AuthScreen\";\nimport UserNavigation from \"./src/navigation/UserNavigation\";\nimport { getTokenApi, setTokenApi, removeTokenApi } from \"./src/api/token\";\nimport AuthContext from \"./src/context/AuthContext\";\nexport default function App() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      auth = _useState2[0],\n      setAuth = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getTokenApi());\n\n            case 2:\n              token = _context.sent;\n\n              if (token) {\n                setAuth({\n                  token: token,\n                  idUser: jwtDecode(token).id\n                });\n              } else {\n                setAuth(null);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var login = function login(user) {\n    setTokenApi(user.jwt);\n    setAuth({\n      token: user.jwt,\n      idUser: jwtDecode(user.jwt).id\n    });\n  };\n\n  var logout = function logout() {\n    if (auth) {\n      removeTokenApi();\n      setAuth(null);\n    }\n  };\n\n  var authData = useMemo(function () {\n    return {\n      auth: auth,\n      login: login,\n      logout: logout,\n      setReloadUser: null\n    };\n  }, [auth]);\n  if (auth === undefined) return null;\n  return React.createElement(AuthContext.Provider, {\n    value: authData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, auth ? React.createElement(UserNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }) : React.createElement(AuthScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 38\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/App.js"],"names":["React","useState","useEffect","useMemo","Provider","PaperProvider","jwtDecode","AuthScreen","UserNavigation","getTokenApi","setTokenApi","removeTokenApi","AuthContext","App","undefined","auth","setAuth","token","idUser","id","login","user","jwt","logout","authData","setReloadUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,oBAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBZ,QAAQ,CAACa,SAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBO,WAAW,EADhC;;AAAA;AACOQ,cAAAA,KADP;;AAEC,kBAAIA,KAAJ,EAAW;AACTD,gBAAAA,OAAO,CAAC;AACNC,kBAAAA,KAAK,EAALA,KADM;AAENC,kBAAAA,MAAM,EAAEZ,SAAS,CAACW,KAAD,CAAT,CAAiBE;AAFnB,iBAAD,CAAP;AAID,eALD,MAKO;AACLH,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAMI,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACtBX,IAAAA,WAAW,CAACW,IAAI,CAACC,GAAN,CAAX;AACAN,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAEI,IAAI,CAACC,GADN;AAENJ,MAAAA,MAAM,EAAEZ,SAAS,CAACe,IAAI,CAACC,GAAN,CAAT,CAAoBH;AAFtB,KAAD,CAAP;AAID,GAND;;AAQA,MAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIR,IAAJ,EAAU;AACRJ,MAAAA,cAAc;AACdK,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GALD;;AAOA,MAAMQ,QAAQ,GAAGrB,OAAO,CACtB;AAAA,WAAO;AACLY,MAAAA,IAAI,EAAJA,IADK;AAELK,MAAAA,KAAK,EAALA,KAFK;AAGLG,MAAAA,MAAM,EAANA,MAHK;AAILE,MAAAA,aAAa,EAAE;AAJV,KAAP;AAAA,GADsB,EAOtB,CAACV,IAAD,CAPsB,CAAxB;AAUA,MAAIA,IAAI,KAAKD,SAAb,EAAwB,OAAO,IAAP;AAExB,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,CADF,CADF;AAOD","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthScreen from \"./src/screens/AuthScreen\";\nimport UserNavigation from \"./src/navigation/UserNavigation\";\nimport { getTokenApi, setTokenApi, removeTokenApi } from \"./src/api/token\";\nimport AuthContext from \"./src/context/AuthContext\";\n\nexport default function App() {\n  const [auth, setAuth] = useState(undefined);\n\n  useEffect(() => {\n    (async () => {\n      const token = await getTokenApi();\n      if (token) {\n        setAuth({\n          token,\n          idUser: jwtDecode(token).id,\n        });\n      } else {\n        setAuth(null);\n      }\n    })();\n  }, []);\n\n  const login = (user) => {\n    setTokenApi(user.jwt);\n    setAuth({\n      token: user.jwt,\n      idUser: jwtDecode(user.jwt).id,\n    });\n  };\n\n  const logout = () => {\n    if (auth) {\n      removeTokenApi();\n      setAuth(null);\n    }\n  };\n\n  const authData = useMemo(\n    () => ({\n      auth,\n      login,\n      logout,\n      setReloadUser: null,\n    }),\n    [auth]\n  );\n\n  if (auth === undefined) return null;\n\n  return (\n    <AuthContext.Provider value={authData}>\n      <PaperProvider>\n        {auth ? <UserNavigation /> : <AuthScreen />}\n      </PaperProvider>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}