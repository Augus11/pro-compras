{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/* @refresh reset\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { StyleSheet, TextInput, View, Button, LogBox } from 'react-native'\r\nimport * as firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAHIYXiWMlKrLeX4WFb7mJ_DkvKGLeUVoI\",\r\n  authDomain: \"pro-compras.firebaseapp.com\",\r\n  databaseURL: \"https://pro-compras-default-rtdb.firebaseio.com\",\r\n  projectId: \"pro-compras\",\r\n  storageBucket: \"pro-compras.appspot.com\",\r\n  messagingSenderId: \"1031422305870\",\r\n  appId: \"1:1031422305870:web:799882862d75404108051f\",\r\n  measurementId: \"G-1V8H399FJX\"\r\n}\r\n\r\nif (firebase.apps.length === 0) {\r\n    firebase.initializeApp(firebaseConfig)\r\n}\r\n\r\nLogBox.ignoreLogs(['Setting a timer for a long period of time'])\r\n\r\nconst db = firebase.firestore()\r\nconst chatsRef = db.collection('chats')\r\n\r\nexport default function App() {\r\n    const [user, setUser] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        readUser()\r\n        const unsubscribe = chatsRef.onSnapshot((querySnapshot) => {\r\n            const messagesFirestore = querySnapshot\r\n                .docChanges()\r\n                .filter(({ type }) => type === 'added')\r\n                .map(({ doc }) => {\r\n                    const message = doc.data()\r\n                    //createdAt is firebase.firestore.Timestamp instance\r\n                    //https://firebase.google.com/docs/reference/js/firebase.firestore.Timestamp\r\n                    return { ...message, createdAt: message.createdAt.toDate() }\r\n                })\r\n                .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())\r\n            appendMessages(messagesFirestore)\r\n        })\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    const appendMessages = useCallback(\r\n        (messages) => {\r\n            setMessages((previousMessages) => GiftedChat.append(previousMessages, messages))\r\n        },\r\n        [messages]\r\n    )\r\n\r\n    async function readUser() {\r\n        const user = await AsyncStorage.getItem('user')\r\n        if (user) {\r\n            setUser(JSON.parse(user))\r\n        }\r\n    }\r\n    async function handlePress() {\r\n        const _id = Math.random().toString(36).substring(7)\r\n        const user = { _id, name }\r\n        await AsyncStorage.setItem('user', JSON.stringify(user))\r\n        setUser(user)\r\n    }\r\n    async function handleSend(messages) {\r\n        const writes = messages.map((m) => chatsRef.add(m))\r\n        await Promise.all(writes)\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput style={styles.input} placeholder=\"Nombre de usuario\" value={name} onChangeText={setName} />\r\n                <Button onPress={handlePress} title=\"Entrar\" />\r\n            </View>\r\n        )\r\n    }\r\n    return <GiftedChat messages={messages} user={user} onSend={handleSend} />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 30,\r\n    },\r\n    input: {\r\n        height: 50,\r\n        width: '100%',\r\n        borderWidth: 1,\r\n        padding: 15,\r\n        marginBottom: 20,\r\n        borderColor: 'gray',\r\n    },\r\n})\r\n*/"]},"metadata":{},"sourceType":"script"}