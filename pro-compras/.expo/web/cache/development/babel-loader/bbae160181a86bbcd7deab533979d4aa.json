{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Account\\\\Orders.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { size } from \"lodash\";\nimport ListOrder from \"../../components/Order/ListOrder\";\nimport { getOrdersApi } from \"../../api/order\";\nimport StatusBar from \"../../components/StatusBar\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nexport default function Orders() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      orders = _useState2[0],\n      setOrders = _useState2[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  useFocusEffect(useCallback(function () {\n    (function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getOrdersApi(auth));\n\n            case 2:\n              response = _context.sent;\n              setOrders(response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []));\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: \"#c2303f\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Mis pedidos\"), !orders ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }) : size(orders) === 0 ? React.createElement(Text, {\n    style: styles.noOrdersText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"No tienes pedidos\") : React.createElement(ListOrder, {\n    orders: orders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  title: {\n    fontSize: 20\n  },\n  addAddress: {\n    borderWidth: 0.9,\n    borderRadius: 5,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    marginTop: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  noOrdersText: {\n    textAlign: \"center\",\n    paddingTop: 20,\n    fontSize: 18\n  },\n  loading: {\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/screens/Account/Orders.js"],"names":["React","useState","useCallback","useFocusEffect","size","ListOrder","getOrdersApi","StatusBar","useAuth","colors","Orders","orders","setOrders","auth","response","styles","container","title","loading","noOrdersText","StyleSheet","create","padding","fontSize","addAddress","borderWidth","borderRadius","borderColor","paddingHorizontal","paddingVertical","marginTop","flexDirection","justifyContent","alignItems","textAlign","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;;;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,SAAP;AACA,SAASC,YAAT;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,kBAA4BT,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeC,SAAf;;AACA,iBAAiBJ,OAAO,EAAxB;AAAA,MAAQK,IAAR,YAAQA,IAAR;;AAEAV,EAAAA,cAAc,CACZD,WAAW,CAAC,YAAM;AAChB,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBI,YAAY,CAACO,IAAD,CADpC;;AAAA;AACOC,cAAAA,QADP;AAECF,cAAAA,SAAS,CAACE,QAAD,CAAT;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALU,EAKR,EALQ,CADC,CAAd;AASA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,SAA3B;AAAqC,IAAA,QAAQ,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGG,CAACN,MAAD,GACC,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEI,MAAM,CAACG,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEGd,IAAI,CAACO,MAAD,CAAJ,KAAiB,CAAjB,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADE,GAGF,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAER,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFF,CADF;AAgBD;AAED,IAAII,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,OAAO,EAAE;AADA,GADkB;AAI7BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,QAAQ,EAAE;AADL,GAJsB;AAO7BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE,GADH;AAEVC,IAAAA,YAAY,EAAE,CAFJ;AAGVC,IAAAA,WAAW,EAAE,MAHH;AAIVC,IAAAA,iBAAiB,EAAE,EAJT;AAKVC,IAAAA,eAAe,EAAE,CALP;AAMVC,IAAAA,SAAS,EAAE,EAND;AAOVC,IAAAA,aAAa,EAAE,KAPL;AAQVC,IAAAA,cAAc,EAAE,eARN;AASVC,IAAAA,UAAU,EAAE;AATF,GAPiB;AAkB7Bd,EAAAA,YAAY,EAAE;AACZe,IAAAA,SAAS,EAAE,QADC;AAEZC,IAAAA,UAAU,EAAE,EAFA;AAGZZ,IAAAA,QAAQ,EAAE;AAHE,GAlBe;AAuB7BL,EAAAA,OAAO,EAAE;AACPY,IAAAA,SAAS,EAAE;AADJ;AAvBoB,CAAlB,CAAb","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { StyleSheet, ScrollView, Text, ActivityIndicator } from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { size } from \"lodash\";\nimport ListOrder from \"../../components/Order/ListOrder\";\nimport { getOrdersApi } from \"../../api/order\";\nimport StatusBar from \"../../components/StatusBar\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\n\nexport default function Orders() {\n  const [orders, setOrders] = useState(null);\n  const { auth } = useAuth();\n\n  useFocusEffect(\n    useCallback(() => {\n      (async () => {\n        const response = await getOrdersApi(auth);\n        setOrders(response);\n      })();\n    }, [])\n  );\n\n  return (\n    <>\n      <StatusBar backgroundColor=\"#c2303f\" barStyle=\"light-content\" />\n      <ScrollView style={styles.container}>\n        <Text style={styles.title}>Mis pedidos</Text>\n\n        {!orders ? (\n          <ActivityIndicator size=\"large\" style={styles.loading} />\n        ) : size(orders) === 0 ? (\n          <Text style={styles.noOrdersText}>No tienes pedidos</Text>\n        ) : (\n          <ListOrder orders={orders} />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n  },\n  addAddress: {\n    borderWidth: 0.9,\n    borderRadius: 5,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    marginTop: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  noOrdersText: {\n    textAlign: \"center\",\n    paddingTop: 20,\n    fontSize: 18,\n  },\n  loading: {\n    marginTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}