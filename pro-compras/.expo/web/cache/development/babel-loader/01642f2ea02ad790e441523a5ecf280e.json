{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Account\\\\ChangeUsername.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport StatusBar from \"../../components/StatusBar\";\nimport { getMeApi, updateUserApi } from \"../../api/user\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nimport { formStyle } from \"../../styles\";\nexport default function ChangeUsername() {\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var navigation = useNavigation();\n  useFocusEffect(useCallback(function () {\n    (function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getMeApi(auth.token));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"username\", response.username));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []));\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function onSubmit(formData) {\n      var response;\n      return _regeneratorRuntime.async(function onSubmit$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(updateUserApi(auth, formData));\n\n            case 4:\n              response = _context2.sent;\n\n              if (!response.statusCode) {\n                _context2.next = 7;\n                break;\n              }\n\n              throw \"El nombre de usuario ya existe\";\n\n            case 7:\n              navigation.goBack();\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              Toast.show(_context2.t0, {\n                position: Toast.positions.CENTER\n              });\n              formik.setFieldError(\"username\", true);\n\n            case 14:\n              setLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: \"#c2303f\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"Nombre de usuario\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"username\", text);\n    },\n    value: formik.values.username,\n    error: formik.errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: formStyle.btnSucces,\n    onPress: formik.handleSubmit,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Cambiar nombre de usuario\")));\n}\n\nfunction initialValues() {\n  return {\n    username: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    username: Yup.string().min(4).required(true)\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/screens/Account/ChangeUsername.js"],"names":["React","useState","useCallback","TextInput","Button","useFocusEffect","useNavigation","useFormik","Yup","Toast","StatusBar","getMeApi","updateUserApi","useAuth","colors","formStyle","ChangeUsername","auth","loading","setLoading","navigation","token","response","formik","setFieldValue","username","initialValues","validationSchema","object","onSubmit","formData","statusCode","goBack","show","position","positions","CENTER","setFieldError","styles","container","input","text","values","errors","btnSucces","handleSubmit","string","min","required","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport StatusBar from \"../../components/StatusBar\";\nimport { getMeApi, updateUserApi } from \"../../api/user\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nimport { formStyle } from \"../../styles\";\n\nexport default function ChangeUsername() {\n  const { auth } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n\n  useFocusEffect(\n    useCallback(() => {\n      (async () => {\n        const response = await getMeApi(auth.token);\n        await formik.setFieldValue(\"username\", response.username);\n      })();\n    }, [])\n  );\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      try {\n        const response = await updateUserApi(auth, formData);\n        if (response.statusCode) throw \"El nombre de usuario ya existe\";\n        navigation.goBack();\n      } catch (error) {\n        Toast.show(error, {\n          position: Toast.positions.CENTER,\n        });\n        formik.setFieldError(\"username\", true);\n      }\n      setLoading(false);\n    },\n  });\n\n  return (\n    <>\n      <StatusBar backgroundColor=\"#c2303f\" barStyle=\"light-content\" />\n      <View style={styles.container}>\n        <TextInput\n          label=\"Nombre de usuario\"\n          style={formStyle.input}\n          onChangeText={(text) => formik.setFieldValue(\"username\", text)}\n          value={formik.values.username}\n          error={formik.errors.username}\n        />\n        <Button\n          mode=\"contained\"\n          style={formStyle.btnSucces}\n          onPress={formik.handleSubmit}\n          loading={loading}\n        >\n          Cambiar nombre de usuario\n        </Button>\n      </View>\n    </>\n  );\n}\n\nfunction initialValues() {\n  return {\n    username: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    username: Yup.string().min(4).required(true),\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}