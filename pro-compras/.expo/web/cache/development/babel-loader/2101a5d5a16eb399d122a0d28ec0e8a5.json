{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Patricia\\\\Desktop\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Account\\\\Addresses.js\";\nimport React, { useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { IconButton } from \"react-native-paper\";\nimport { useNavigation, useFocusEffect } from \"@react-navigation/native\";\nimport { size } from \"lodash\";\nimport StatusBar from \"../../components/StatusBar\";\nimport AddressList from \"../../components/Address/AddressList\";\nimport { getAddressesApi } from \"../../api/address\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nexport default function Addresses() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      addresses = _useState2[0],\n      setAddresses = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reloadAddress = _useState4[0],\n      setReloadAddress = _useState4[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  var navigation = useNavigation();\n  useFocusEffect(useCallback(function () {\n    setAddresses(null);\n\n    (function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getAddressesApi(auth));\n\n            case 2:\n              response = _context.sent;\n              setAddresses(response);\n              setReloadAddress(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [reloadAddress]));\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: colors.bgDark,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Mis direcciones\"), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate(\"add-address\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addAddressText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"A\\xF1adir una direcci\\xF3n\"), React.createElement(IconButton, {\n    icon: \"arrow-right\",\n    color: \"#000\",\n    size: 19,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))), !addresses ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }) : size(addresses) === 0 ? React.createElement(Text, {\n    style: styles.noAddressText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Crea tu primera direcci\\xF3n\") : React.createElement(AddressList, {\n    addresses: addresses,\n    setReloadAddress: setReloadAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  title: {\n    fontSize: 20\n  },\n  addAddress: {\n    borderWidth: 0.9,\n    borderRadius: 5,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    marginTop: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  addAddressText: {\n    fontSize: 16\n  },\n  noAddressText: {\n    textAlign: \"center\",\n    paddingTop: 20,\n    fontSize: 18\n  },\n  loading: {\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Patricia/Desktop/Nueva carpeta/pro-compras/src/screens/Account/Addresses.js"],"names":["React","useState","useCallback","IconButton","useNavigation","useFocusEffect","size","StatusBar","AddressList","getAddressesApi","useAuth","colors","Addresses","addresses","setAddresses","reloadAddress","setReloadAddress","auth","navigation","response","bgDark","styles","container","title","navigate","addAddress","addAddressText","loading","noAddressText","StyleSheet","create","padding","fontSize","borderWidth","borderRadius","borderColor","paddingHorizontal","paddingVertical","marginTop","flexDirection","justifyContent","alignItems","textAlign","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;;;;;AASA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,0BAA9C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,SAASC,eAAT;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,kBACAX,QAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MAC3BY,SAD2B;AAAA,MAChBC,YADgB;;AAAA,mBAEQb,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,MAE3Bc,aAF2B;AAAA,MAEZC,gBAFY;;AAAA,iBAGjBN,OAAO,EAHU;AAAA,MAG1BO,IAH0B,YAG1BA,IAH0B;;AAIlC,MAAMC,UAAU,GAAGd,aAAa,EAAhC;AAEAC,EAAAA,cAAc,CACZH,WAAW,CAAC,YAAM;AAChBY,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBL,eAAe,CAACQ,IAAD,CADvC;;AAAA;AACOE,cAAAA,QADP;AAECL,cAAAA,YAAY,CAACK,QAAD,CAAZ;AACAH,cAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKD,GAPU,EAOR,CAACD,aAAD,CAPQ,CADC,CAAd;AAWA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAEJ,MAAM,CAACS,MAAnC;AAA2C,IAAA,QAAQ,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,wBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACM,QAAX,CAAoB,aAApB,CAAN;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,aAAjB;AAA+B,IAAA,KAAK,EAAC,MAArC;AAA4C,IAAA,IAAI,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CAFF,EAWG,CAACb,SAAD,GACC,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEQ,MAAM,CAACM,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEGrB,IAAI,CAACO,SAAD,CAAJ,KAAoB,CAApB,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACO,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADE,GAGF,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEf,SADb;AAEE,IAAA,gBAAgB,EAAEG,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAFF,CADF;AA2BD;AAED,IAAIK,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,OAAO,EAAE;AADA,GADkB;AAI7BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,QAAQ,EAAE;AADL,GAJsB;AAO7BP,EAAAA,UAAU,EAAE;AACVQ,IAAAA,WAAW,EAAE,GADH;AAEVC,IAAAA,YAAY,EAAE,CAFJ;AAGVC,IAAAA,WAAW,EAAE,MAHH;AAIVC,IAAAA,iBAAiB,EAAE,EAJT;AAKVC,IAAAA,eAAe,EAAE,CALP;AAMVC,IAAAA,SAAS,EAAE,EAND;AAOVC,IAAAA,aAAa,EAAE,KAPL;AAQVC,IAAAA,cAAc,EAAE,eARN;AASVC,IAAAA,UAAU,EAAE;AATF,GAPiB;AAkB7Bf,EAAAA,cAAc,EAAE;AACdM,IAAAA,QAAQ,EAAE;AADI,GAlBa;AAqB7BJ,EAAAA,aAAa,EAAE;AACbc,IAAAA,SAAS,EAAE,QADE;AAEbC,IAAAA,UAAU,EAAE,EAFC;AAGbX,IAAAA,QAAQ,EAAE;AAHG,GArBc;AA0B7BL,EAAAA,OAAO,EAAE;AACPW,IAAAA,SAAS,EAAE;AADJ;AA1BoB,CAAlB,CAAb","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  Text,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n} from \"react-native\";\nimport { IconButton } from \"react-native-paper\";\nimport { useNavigation, useFocusEffect } from \"@react-navigation/native\";\nimport { size } from \"lodash\";\nimport StatusBar from \"../../components/StatusBar\";\nimport AddressList from \"../../components/Address/AddressList\";\nimport { getAddressesApi } from \"../../api/address\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\n\nexport default function Addresses() {\n  const [addresses, setAddresses] = useState(null);\n  const [reloadAddress, setReloadAddress] = useState(false);\n  const { auth } = useAuth();\n  const navigation = useNavigation();\n\n  useFocusEffect(\n    useCallback(() => {\n      setAddresses(null);\n      (async () => {\n        const response = await getAddressesApi(auth);\n        setAddresses(response);\n        setReloadAddress(false);\n      })();\n    }, [reloadAddress])\n  );\n\n  return (\n    <>\n      <StatusBar backgroundColor={colors.bgDark} barStyle=\"light-content\" />\n      <ScrollView style={styles.container}>\n        <Text style={styles.title}>Mis direcciones</Text>\n        <TouchableWithoutFeedback\n          onPress={() => navigation.navigate(\"add-address\")}\n        >\n          <View style={styles.addAddress}>\n            <Text style={styles.addAddressText}>Añadir una dirección</Text>\n            <IconButton icon=\"arrow-right\" color=\"#000\" size={19} />\n          </View>\n        </TouchableWithoutFeedback>\n\n        {!addresses ? (\n          <ActivityIndicator size=\"large\" style={styles.loading} />\n        ) : size(addresses) === 0 ? (\n          <Text style={styles.noAddressText}>Crea tu primera dirección</Text>\n        ) : (\n          <AddressList\n            addresses={addresses}\n            setReloadAddress={setReloadAddress}\n          />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n  },\n  addAddress: {\n    borderWidth: 0.9,\n    borderRadius: 5,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    marginTop: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  addAddressText: {\n    fontSize: 16,\n  },\n  noAddressText: {\n    textAlign: \"center\",\n    paddingTop: 20,\n    fontSize: 18,\n  },\n  loading: {\n    marginTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}