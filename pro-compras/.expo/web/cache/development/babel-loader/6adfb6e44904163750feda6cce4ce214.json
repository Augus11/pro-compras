{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\components\\\\Auth\\\\LoginForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { loginApi } from \"../../api/user\";\nimport { formStyle } from \"../../styles\";\nexport default function LoginForm(props) {\n  var setShowLogin = props.setShowLogin;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var showRegister = function showRegister() {\n    return setShowLogin(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function onSubmit(formData) {\n      var response;\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(loginApi(formData));\n\n            case 4:\n              response = _context.sent;\n\n              if (!response.statusCode) {\n                _context.next = 7;\n                break;\n              }\n\n              throw \"Error en el usuario o contraseña\";\n\n            case 7:\n              login(response);\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              Toast.show(_context.t0, {\n                position: Toast.positions.CENTER\n              });\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  });\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email o Username\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"identifier\", text);\n    },\n    value: formik.values.identifier,\n    error: formik.errors.identifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Contrase\\xF1a\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"password\", text);\n    },\n    value: formik.values.password,\n    error: formik.errors.password,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: formStyle.btnSucces,\n    onPress: formik.handleSubmit,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Entrar\"), React.createElement(Button, {\n    mode: \"text\",\n    style: formStyle.btnText,\n    labelStyle: formStyle.btnTextLabel,\n    onPress: showRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Registrarse\"));\n}\n\nfunction initialValues() {\n  return {\n    identifier: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    identifier: Yup.string().required(true),\n    password: Yup.string().required(true)\n  };\n}","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/components/Auth/LoginForm.js"],"names":["React","useState","TextInput","Button","useFormik","Yup","Toast","useAuth","loginApi","formStyle","LoginForm","props","setShowLogin","loading","setLoading","login","showRegister","prevState","formik","initialValues","validationSchema","object","onSubmit","formData","response","statusCode","show","position","positions","CENTER","input","text","setFieldValue","values","identifier","errors","password","btnSucces","handleSubmit","btnText","btnTextLabel","string","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { loginApi } from \"../../api/user\";\nimport { formStyle } from \"../../styles\";\n\nexport default function LoginForm(props) {\n  const { setShowLogin } = props;\n  const [loading, setLoading] = useState(false);\n  const { login } = useAuth();\n\n  const showRegister = () => setShowLogin((prevState) => !prevState);\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      try {\n        const response = await loginApi(formData);\n        if (response.statusCode) throw \"Error en el usuario o contraseña\";\n        login(response);\n      } catch (error) {\n        Toast.show(error, {\n          position: Toast.positions.CENTER,\n        });\n        setLoading(false);\n      }\n    },\n  });\n\n  return (\n    <View>\n      <TextInput\n        label=\"Email o Username\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"identifier\", text)}\n        value={formik.values.identifier}\n        error={formik.errors.identifier}\n      />\n      <TextInput\n        label=\"Contraseña\"\n        style={formStyle.input}\n        onChangeText={(text) => formik.setFieldValue(\"password\", text)}\n        value={formik.values.password}\n        error={formik.errors.password}\n        secureTextEntry\n      />\n      <Button\n        mode=\"contained\"\n        style={formStyle.btnSucces}\n        onPress={formik.handleSubmit}\n        loading={loading}\n      >\n        Entrar\n      </Button>\n      <Button\n        mode=\"text\"\n        style={formStyle.btnText}\n        labelStyle={formStyle.btnTextLabel}\n        onPress={showRegister}\n      >\n        Registrarse\n      </Button>\n    </View>\n  );\n}\n\nfunction initialValues() {\n  return {\n    identifier: \"\",\n    password: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    identifier: Yup.string().required(true),\n    password: Yup.string().required(true),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}