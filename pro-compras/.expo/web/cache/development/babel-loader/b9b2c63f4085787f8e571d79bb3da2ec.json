{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Patricia\\\\Desktop\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Account\\\\AddAddress.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport StatusBar from \"../../components/StatusBar\";\nimport { addAddressApi, getAddressApi, updateAddressApi } from \"../../api/address\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nimport { formStyle } from \"../../styles\";\nexport default function AddAddress(props) {\n  var params = props.route.params;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newAddress = _useState4[0],\n      setNewAddress = _useState4[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    (function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(params != null && params.idAddress)) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getAddressApi(auth, params.idAddress));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"_id\", response._id));\n\n            case 6:\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"title\", response.title));\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"name_lastname\", response.name_lastname));\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"address\", response.address));\n\n            case 12:\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"postal_code\", response.postal_code));\n\n            case 14:\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"city\", response.city));\n\n            case 16:\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"state\", response.state));\n\n            case 18:\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"country\", response.country));\n\n            case 20:\n              _context.next = 22;\n              return _regeneratorRuntime.awrap(formik.setFieldValue(\"phone\", response.phone));\n\n            case 22:\n              setNewAddress(false);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [params]);\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function onSubmit(formData) {\n      return _regeneratorRuntime.async(function onSubmit$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              _context2.prev = 1;\n\n              if (!newAddress) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(addAddressApi(auth, formData));\n\n            case 5:\n              _context2.next = 9;\n              break;\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(updateAddressApi(auth, formData));\n\n            case 9:\n              navigation.goBack();\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 15:\n              setLoading(false);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 12]], Promise);\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: colors.bgDark,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Nueva direcci\\xF3n\"), React.createElement(TextInput, {\n    label: \"Titulo\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"title\", text);\n    },\n    value: formik.values.title,\n    error: formik.errors.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Nombre y apellidos\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"name_lastname\", text);\n    },\n    value: formik.values.name_lastname,\n    error: formik.errors.name_lastname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Direcci\\xF3n\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"address\", text);\n    },\n    value: formik.values.address,\n    error: formik.errors.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Codigo Postal\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"postal_code\", text);\n    },\n    value: formik.values.postal_code,\n    error: formik.errors.postal_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Poblacion\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"city\", text);\n    },\n    value: formik.values.city,\n    error: formik.errors.city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Estado\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"state\", text);\n    },\n    value: formik.values.state,\n    error: formik.errors.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Pais\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"country\", text);\n    },\n    value: formik.values.country,\n    error: formik.errors.country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Telefono\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"phone\", text);\n    },\n    value: formik.values.phone,\n    error: formik.errors.phone,\n    keyboardType: \"number-pad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: [formStyle.btnSucces, styles.btnSucces],\n    onPress: formik.handleSubmit,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, newAddress ? \"Crear dirección\" : \"Actualizar dirección\"))));\n}\n\nfunction initialValues() {\n  return {\n    title: \"\",\n    name_lastname: \"\",\n    address: \"\",\n    postal_code: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    phone: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    title: Yup.string().required(true),\n    name_lastname: Yup.string().required(true),\n    address: Yup.string().required(true),\n    postal_code: Yup.string().required(true),\n    city: Yup.string().required(true),\n    state: Yup.string().required(true),\n    country: Yup.string().required(true),\n    phone: Yup.string().required(true)\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 20,\n    paddingVertical: 20\n  },\n  btnSucces: {\n    marginBottom: 20\n  },\n  keyboard: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Patricia/Desktop/Nueva carpeta/pro-compras/src/screens/Account/AddAddress.js"],"names":["React","useState","useEffect","TextInput","Button","KeyboardAwareScrollView","useNavigation","useFormik","Yup","StatusBar","addAddressApi","getAddressApi","updateAddressApi","useAuth","colors","formStyle","AddAddress","props","params","route","loading","setLoading","newAddress","setNewAddress","auth","navigation","idAddress","response","formik","setFieldValue","_id","title","name_lastname","address","postal_code","city","state","country","phone","initialValues","validationSchema","object","onSubmit","formData","goBack","console","log","bgDark","styles","container","input","text","values","errors","btnSucces","handleSubmit","string","required","StyleSheet","create","paddingHorizontal","fontSize","paddingVertical","marginBottom","keyboard","flex","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport StatusBar from \"../../components/StatusBar\";\nimport {\n  addAddressApi,\n  getAddressApi,\n  updateAddressApi,\n} from \"../../api/address\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nimport { formStyle } from \"../../styles\";\n\nexport default function AddAddress(props) {\n  const {\n    route: { params },\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const [newAddress, setNewAddress] = useState(true);\n  const { auth } = useAuth();\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    (async () => {\n      if (params?.idAddress) {\n        const response = await getAddressApi(auth, params.idAddress);\n        await formik.setFieldValue(\"_id\", response._id);\n        await formik.setFieldValue(\"title\", response.title);\n        await formik.setFieldValue(\"name_lastname\", response.name_lastname);\n        await formik.setFieldValue(\"address\", response.address);\n        await formik.setFieldValue(\"postal_code\", response.postal_code);\n        await formik.setFieldValue(\"city\", response.city);\n        await formik.setFieldValue(\"state\", response.state);\n        await formik.setFieldValue(\"country\", response.country);\n        await formik.setFieldValue(\"phone\", response.phone);\n        setNewAddress(false);\n      }\n    })();\n  }, [params]);\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      try {\n        if (newAddress) await addAddressApi(auth, formData);\n        else await updateAddressApi(auth, formData);\n        navigation.goBack();\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    },\n  });\n\n  return (\n    <>\n      <StatusBar backgroundColor={colors.bgDark} barStyle=\"light-content\" />\n      <KeyboardAwareScrollView extraScrollHeight={25}>\n        <View style={styles.container}>\n          <Text style={styles.title}>Nueva dirección</Text>\n          <TextInput\n            label=\"Titulo\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"title\", text)}\n            value={formik.values.title}\n            error={formik.errors.title}\n          />\n          <TextInput\n            label=\"Nombre y apellidos\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"name_lastname\", text)}\n            value={formik.values.name_lastname}\n            error={formik.errors.name_lastname}\n          />\n          <TextInput\n            label=\"Dirección\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"address\", text)}\n            value={formik.values.address}\n            error={formik.errors.address}\n          />\n          <TextInput\n            label=\"Codigo Postal\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"postal_code\", text)}\n            value={formik.values.postal_code}\n            error={formik.errors.postal_code}\n          />\n          <TextInput\n            label=\"Poblacion\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"city\", text)}\n            value={formik.values.city}\n            error={formik.errors.city}\n          />\n          <TextInput\n            label=\"Estado\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"state\", text)}\n            value={formik.values.state}\n            error={formik.errors.state}\n          />\n          <TextInput\n            label=\"Pais\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"country\", text)}\n            value={formik.values.country}\n            error={formik.errors.country}\n          />\n          <TextInput\n            label=\"Telefono\"\n            style={formStyle.input}\n            onChangeText={(text) => formik.setFieldValue(\"phone\", text)}\n            value={formik.values.phone}\n            error={formik.errors.phone}\n            keyboardType=\"number-pad\"\n          />\n          <Button\n            mode=\"contained\"\n            style={[formStyle.btnSucces, styles.btnSucces]}\n            onPress={formik.handleSubmit}\n            loading={loading}\n          >\n            {newAddress ? \"Crear dirección\" : \"Actualizar dirección\"}\n          </Button>\n        </View>\n      </KeyboardAwareScrollView>\n    </>\n  );\n}\n\nfunction initialValues() {\n  return {\n    title: \"\",\n    name_lastname: \"\",\n    address: \"\",\n    postal_code: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    phone: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    title: Yup.string().required(true),\n    name_lastname: Yup.string().required(true),\n    address: Yup.string().required(true),\n    postal_code: Yup.string().required(true),\n    city: Yup.string().required(true),\n    state: Yup.string().required(true),\n    country: Yup.string().required(true),\n    phone: Yup.string().required(true),\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n  },\n  title: {\n    fontSize: 20,\n    paddingVertical: 20,\n  },\n  btnSucces: {\n    marginBottom: 20,\n  },\n  keyboard: { flex: 1, flexDirection: \"column\", justifyContent: \"center\" },\n});\n"]},"metadata":{},"sourceType":"module"}