{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Patricia\\\\Desktop\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Cart.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { size } from \"lodash\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport StatusBar from \"../components/StatusBar\";\nimport NotProducts from \"../components/Cart/NotProducts\";\nimport ProductList from \"../components/Cart/ProductList\";\nimport AddressList from \"../components/Cart/AddressList\";\nimport Payment from \"../components/Cart/Payment\";\nimport { getProductCartApi } from \"../api/cart\";\nimport { getAddressesApi } from \"../api/address\";\nimport useAuth from \"../hooks/useAuth\";\nimport colors from \"../styles/colors\";\nexport default function Cart() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      cart = _useState2[0],\n      setCart = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      products = _useState4[0],\n      setProducts = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addresses = _useState6[0],\n      setAddresses = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      reloadCart = _useState8[0],\n      setReloadCart = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      totalPayment = _useState10[0],\n      setTotalPayment = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedAddress = _useState12[0],\n      setSelectedAddress = _useState12[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  useFocusEffect(useCallback(function () {\n    setCart(null);\n    loadCart();\n    loadAddresses();\n  }, []));\n  useEffect(function () {\n    reloadCart && loadCart();\n  }, [reloadCart]);\n\n  var loadCart = function loadCart() {\n    var response;\n    return _regeneratorRuntime.async(function loadCart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getProductCartApi());\n\n          case 2:\n            response = _context.sent;\n            setCart(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadAddresses = function loadAddresses() {\n    var response;\n    return _regeneratorRuntime.async(function loadAddresses$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getAddressesApi(auth));\n\n          case 2:\n            response = _context2.sent;\n            setAddresses(response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: colors.bgDark,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), !cart || size(cart) === 0 ? React.createElement(NotProducts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }) : React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.cartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(ProductList, {\n    cart: cart,\n    products: products,\n    setProducts: setProducts,\n    setReloadCart: setReloadCart,\n    setTotalPayment: setTotalPayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(AddressList, {\n    addresses: addresses,\n    selectedAddress: selectedAddress,\n    setSelectedAddress: setSelectedAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), React.createElement(Payment, {\n    totalPayment: totalPayment,\n    selectedAddress: selectedAddress,\n    products: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })), reloadCart && React.createElement(View, {\n    style: styles.reload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.reloadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Cargando...\"))));\n}\nvar styles = StyleSheet.create({\n  cartContainer: {\n    padding: 10\n  },\n  reload: {\n    backgroundColor: \"#000\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: 0.3,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  reloadText: {\n    marginTop: 10,\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Patricia/Desktop/Nueva carpeta/pro-compras/src/screens/Cart.js"],"names":["React","useState","useEffect","useCallback","useFocusEffect","size","KeyboardAwareScrollView","StatusBar","NotProducts","ProductList","AddressList","Payment","getProductCartApi","getAddressesApi","useAuth","colors","Cart","cart","setCart","products","setProducts","addresses","setAddresses","reloadCart","setReloadCart","totalPayment","setTotalPayment","selectedAddress","setSelectedAddress","auth","loadCart","loadAddresses","response","bgDark","styles","cartContainer","reload","reloadText","StyleSheet","create","padding","backgroundColor","position","width","height","opacity","alignItems","justifyContent","marginTop","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;;;;;AAQA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;AACA,SAASC,iBAAT;AACA,SAASC,eAAT;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBACLf,QAAQ,CAAC,IAAD,CADH;AAAA;AAAA,MACtBgB,IADsB;AAAA,MAChBC,OADgB;;AAAA,mBAEGjB,QAAQ,CAAC,IAAD,CAFX;AAAA;AAAA,MAEtBkB,QAFsB;AAAA,MAEZC,WAFY;;AAAA,mBAGKnB,QAAQ,CAAC,IAAD,CAHb;AAAA;AAAA,MAGtBoB,SAHsB;AAAA,MAGXC,YAHW;;AAAA,mBAIOrB,QAAQ,CAAC,KAAD,CAJf;AAAA;AAAA,MAItBsB,UAJsB;AAAA,MAIVC,aAJU;;AAAA,mBAKWvB,QAAQ,CAAC,IAAD,CALnB;AAAA;AAAA,MAKtBwB,YALsB;AAAA,MAKRC,eALQ;;AAAA,oBAMiBzB,QAAQ,CAAC,IAAD,CANzB;AAAA;AAAA,MAMtB0B,eANsB;AAAA,MAMLC,kBANK;;AAAA,iBAOZd,OAAO,EAPK;AAAA,MAOrBe,IAPqB,YAOrBA,IAPqB;;AAS7BzB,EAAAA,cAAc,CACZD,WAAW,CAAC,YAAM;AAChBe,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAY,IAAAA,QAAQ;AACRC,IAAAA,aAAa;AACd,GAJU,EAIR,EAJQ,CADC,CAAd;AAQA7B,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,UAAU,IAAIO,QAAQ,EAAtB;AACD,GAFQ,EAEN,CAACP,UAAD,CAFM,CAAT;;AAIA,MAAMO,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQlB,iBAAiB,EADzB;;AAAA;AACToB,YAAAA,QADS;AAEfd,YAAAA,OAAO,CAACc,QAAD,CAAP;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAKA,MAAMD,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGlB,eAAe,CAACgB,IAAD,CADlB;;AAAA;AACdG,YAAAA,QADc;AAEpBV,YAAAA,YAAY,CAACU,QAAD,CAAZ;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAKA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAEjB,MAAM,CAACkB,MAAnC;AAA2C,IAAA,QAAQ,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAAChB,IAAD,IAASZ,IAAI,CAACY,IAAD,CAAJ,KAAe,CAAxB,GACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,uBAAD;AAAyB,IAAA,iBAAiB,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEiB,MAAM,CAACC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAElB,IADR;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,aAAa,EAAEI,aAJjB;AAKE,IAAA,eAAe,EAAEE,eALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,eAAe,EAAEM,eAFnB;AAGE,IAAA,kBAAkB,EAAEC,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAaE,oBAAC,OAAD;AACE,IAAA,YAAY,EAAEH,YADhB;AAEE,IAAA,eAAe,EAAEE,eAFnB;AAGE,IAAA,QAAQ,EAAER,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAoBGI,UAAU,IACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CArBJ,CALJ,CADF;AAoCD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,aAAa,EAAE;AACbK,IAAAA,OAAO,EAAE;AADI,GADgB;AAI/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,eAAe,EAAE,MADX;AAENC,IAAAA,QAAQ,EAAE,UAFJ;AAGNC,IAAAA,KAAK,EAAE,MAHD;AAINC,IAAAA,MAAM,EAAE,MAJF;AAKNC,IAAAA,OAAO,EAAE,GALH;AAMNC,IAAAA,UAAU,EAAE,QANN;AAONC,IAAAA,cAAc,EAAE;AAPV,GAJuB;AAa/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,SAAS,EAAE,EADD;AAEVC,IAAAA,KAAK,EAAE;AAFG;AAbmB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  Text,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { size } from \"lodash\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport StatusBar from \"../components/StatusBar\";\nimport NotProducts from \"../components/Cart/NotProducts\";\nimport ProductList from \"../components/Cart/ProductList\";\nimport AddressList from \"../components/Cart/AddressList\";\nimport Payment from \"../components/Cart/Payment\";\nimport { getProductCartApi } from \"../api/cart\";\nimport { getAddressesApi } from \"../api/address\";\nimport useAuth from \"../hooks/useAuth\";\nimport colors from \"../styles/colors\";\n\nexport default function Cart() {\n  const [cart, setCart] = useState(null);\n  const [products, setProducts] = useState(null);\n  const [addresses, setAddresses] = useState(null);\n  const [reloadCart, setReloadCart] = useState(false);\n  const [totalPayment, setTotalPayment] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const { auth } = useAuth();\n\n  useFocusEffect(\n    useCallback(() => {\n      setCart(null);\n      loadCart();\n      loadAddresses();\n    }, [])\n  );\n\n  useEffect(() => {\n    reloadCart && loadCart();\n  }, [reloadCart]);\n\n  const loadCart = async () => {\n    const response = await getProductCartApi();\n    setCart(response);\n  };\n\n  const loadAddresses = async () => {\n    const response = await getAddressesApi(auth);\n    setAddresses(response);\n  };\n\n  return (\n    <>\n      <StatusBar backgroundColor={colors.bgDark} barStyle=\"light-content\" />\n      {!cart || size(cart) === 0 ? (\n        <NotProducts />\n      ) : (\n        <KeyboardAwareScrollView extraScrollHeight={25}>\n          <ScrollView style={styles.cartContainer}>\n            <ProductList\n              cart={cart}\n              products={products}\n              setProducts={setProducts}\n              setReloadCart={setReloadCart}\n              setTotalPayment={setTotalPayment}\n            />\n            <AddressList\n              addresses={addresses}\n              selectedAddress={selectedAddress}\n              setSelectedAddress={setSelectedAddress}\n            />\n            <Payment\n              totalPayment={totalPayment}\n              selectedAddress={selectedAddress}\n              products={products}\n            />\n          </ScrollView>\n          {reloadCart && (\n            <View style={styles.reload}>\n              <ActivityIndicator size=\"large\" color=\"#fff\" />\n              <Text style={styles.reloadText}>Cargando...</Text>\n            </View>\n          )}\n        </KeyboardAwareScrollView>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cartContainer: {\n    padding: 10,\n  },\n  reload: {\n    backgroundColor: \"#000\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: 0.3,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  reloadText: {\n    marginTop: 10,\n    color: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}