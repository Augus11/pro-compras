{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anten\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Account\\\\Account.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport StatusBar from \"../../components/StatusBar\";\nimport UserInfo from \"../../components/Account/UserInfo\";\nimport Menu from \"../../components/Account/Menu\";\nimport ScreenLoading from \"../../components/ScreenLoading\";\nimport Search from \"../../components/Search\";\nimport { getMeApi } from \"../../api/user\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nexport default function Account() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  useFocusEffect(useCallback(function () {\n    (function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getMeApi(auth.token));\n\n            case 2:\n              response = _context.sent;\n              setUser(response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []));\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: \"#c2303f\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), !user ? React.createElement(ScreenLoading, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(UserInfo, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/screens/Account/Account.js"],"names":["React","useState","useCallback","useFocusEffect","StatusBar","UserInfo","Menu","ScreenLoading","Search","getMeApi","useAuth","colors","Account","user","setUser","auth","token","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,QAAT;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,kBAAwBX,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,iBAAiBJ,OAAO,EAAxB;AAAA,MAAQK,IAAR,YAAQA,IAAR;;AAEAZ,EAAAA,cAAc,CACZD,WAAW,CAAC,YAAM;AAChB,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBO,QAAQ,CAACM,IAAI,CAACC,KAAN,CADhC;;AAAA;AACOC,cAAAA,QADP;AAECH,cAAAA,OAAO,CAACG,QAAD,CAAP;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALU,EAKR,EALQ,CADC,CAAd;AASA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,SAA3B;AAAqC,IAAA,QAAQ,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAACJ,IAAD,GACC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CALJ,CADF;AAgBD","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport StatusBar from \"../../components/StatusBar\";\nimport UserInfo from \"../../components/Account/UserInfo\";\nimport Menu from \"../../components/Account/Menu\";\nimport ScreenLoading from \"../../components/ScreenLoading\";\nimport Search from \"../../components/Search\";\nimport { getMeApi } from \"../../api/user\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\n\nexport default function Account() {\n  const [user, setUser] = useState(null);\n  const { auth } = useAuth();\n\n  useFocusEffect(\n    useCallback(() => {\n      (async () => {\n        const response = await getMeApi(auth.token);\n        setUser(response);\n      })();\n    }, [])\n  );\n\n  return (\n    <>\n      <StatusBar backgroundColor=\"#c2303f\" barStyle=\"light-content\" />\n      {!user ? (\n        <ScreenLoading size=\"large\" />\n      ) : (\n        <>\n          <Search />\n          <ScrollView>\n            <UserInfo user={user} />\n            <Menu />\n          </ScrollView>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}