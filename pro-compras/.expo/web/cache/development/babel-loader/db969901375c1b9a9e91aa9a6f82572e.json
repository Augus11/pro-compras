{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { size } from \"lodash\";\nimport { SEARCH_HISTORY } from \"../utils/constants\";\nimport { sortArrayByDate } from \"../utils/functions\";\nexport function getSearchHistory() {\n  var history;\n  return _regeneratorRuntime.async(function getSearchHistory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(SEARCH_HISTORY));\n\n        case 3:\n          history = _context.sent;\n\n          if (history) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", []);\n\n        case 6:\n          return _context.abrupt(\"return\", sortArrayByDate(JSON.parse(history)));\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", []);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n}\nexport function updateSearchHistory(search) {\n  var history;\n  return _regeneratorRuntime.async(function updateSearchHistory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getSearchHistory());\n\n        case 2:\n          history = _context2.sent;\n          if (size(history) > 5) history.pop();\n          history.push({\n            search: search,\n            date: new Date()\n          });\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(SEARCH_HISTORY, JSON.stringify(history)));\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/anten/OneDrive/Escritorio/Nueva carpeta/pro-compras/src/api/search.js"],"names":["AsyncStorage","size","SEARCH_HISTORY","sortArrayByDate","getSearchHistory","getItem","history","JSON","parse","updateSearchHistory","search","pop","push","date","Date","setItem","stringify"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT;AACA,SAASC,eAAT;AAEA,OAAO,SAAeC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEmBJ,YAAY,CAACK,OAAb,CAAqBH,cAArB,CAFnB;;AAAA;AAEGI,UAAAA,OAFH;;AAAA,cAGEA,OAHF;AAAA;AAAA;AAAA;;AAAA,2CAGkB,EAHlB;;AAAA;AAAA,2CAKIH,eAAe,CAACI,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAD,CALnB;;AAAA;AAAA;AAAA;AAAA,2CAOI,EAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAeG,mBAAf,CAAmCC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACiBN,gBAAgB,EADjC;;AAAA;AACCE,UAAAA,OADD;AAGL,cAAIL,IAAI,CAACK,OAAD,CAAJ,GAAgB,CAApB,EAAuBA,OAAO,CAACK,GAAR;AAEvBL,UAAAA,OAAO,CAACM,IAAR,CAAa;AACXF,YAAAA,MAAM,EAANA,MADW;AAEXG,YAAAA,IAAI,EAAE,IAAIC,IAAJ;AAFK,WAAb;AALK;AAAA,2CASCd,YAAY,CAACe,OAAb,CAAqBb,cAArB,EAAqCK,IAAI,CAACS,SAAL,CAAeV,OAAf,CAArC,CATD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { size } from \"lodash\";\nimport { SEARCH_HISTORY } from \"../utils/constants\";\nimport { sortArrayByDate } from \"../utils/functions\";\n\nexport async function getSearchHistory() {\n  try {\n    const history = await AsyncStorage.getItem(SEARCH_HISTORY);\n    if (!history) return [];\n\n    return sortArrayByDate(JSON.parse(history));\n  } catch (e) {\n    return [];\n  }\n}\n\nexport async function updateSearchHistory(search) {\n  const history = await getSearchHistory();\n\n  if (size(history) > 5) history.pop();\n\n  history.push({\n    search,\n    date: new Date(),\n  });\n  await AsyncStorage.setItem(SEARCH_HISTORY, JSON.stringify(history));\n}\n"]},"metadata":{},"sourceType":"module"}