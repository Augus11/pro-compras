{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patricia\\\\Desktop\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\components\\\\Cart\\\\AddressList.js\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { map } from \"lodash\";\nimport colors from \"../../styles/colors\";\nexport default function AddressList(props) {\n  var _this = this;\n\n  var addresses = props.addresses,\n      selectedAddress = props.selectedAddress,\n      setSelectedAddress = props.setSelectedAddress;\n  useEffect(function () {\n    addresses && setSelectedAddress(addresses[0]);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Direccion de envio:\"), map(addresses, function (address) {\n    return React.createElement(TouchableWithoutFeedback, {\n      key: address._id,\n      onPress: function onPress() {\n        return setSelectedAddress(address);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: [styles.address, address._id === (selectedAddress == null ? void 0 : selectedAddress._id) && styles.checked],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, address.title), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, address.name_lastname), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, address.address), React.createElement(View, {\n      style: styles.blockLine,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, address.state, \", \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, address.city, \", \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, address.postal_code)), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, address.country), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Numero de telefono: \", address.phone)));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 50\n  },\n  containerTitle: {\n    paddingBottom: 10,\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  address: {\n    borderWidth: 0.9,\n    borderRadius: 5,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    marginBottom: 15\n  },\n  title: {\n    fontWeight: \"bold\",\n    paddingBottom: 5\n  },\n  blockLine: {\n    flexDirection: \"row\"\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 30\n  },\n  checked: {\n    borderColor: colors.primary,\n    backgroundColor: \"#0098d330\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Patricia/Desktop/Nueva carpeta/pro-compras/src/components/Cart/AddressList.js"],"names":["React","useEffect","map","colors","AddressList","props","addresses","selectedAddress","setSelectedAddress","styles","container","containerTitle","address","_id","checked","title","name_lastname","blockLine","state","city","postal_code","country","phone","StyleSheet","create","marginTop","paddingBottom","fontSize","fontWeight","borderWidth","borderRadius","borderColor","paddingHorizontal","paddingVertical","marginBottom","flexDirection","actions","justifyContent","primary","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StyleSheet, View, Text, TouchableWithoutFeedback } from \"react-native\";\nimport { map } from \"lodash\";\nimport colors from \"../../styles/colors\";\n\nexport default function AddressList(props) {\n  const { addresses, selectedAddress, setSelectedAddress } = props;\n\n  useEffect(() => {\n    addresses && setSelectedAddress(addresses[0]);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.containerTitle}>Direccion de envio:</Text>\n      {map(addresses, (address) => (\n        <TouchableWithoutFeedback\n          key={address._id}\n          onPress={() => setSelectedAddress(address)}\n        >\n          <View\n            style={[\n              styles.address,\n              address._id === selectedAddress?._id && styles.checked,\n            ]}\n          >\n            <Text style={styles.title}>{address.title}</Text>\n            <Text>{address.name_lastname}</Text>\n            <Text>{address.address}</Text>\n            <View style={styles.blockLine}>\n              <Text>{address.state}, </Text>\n              <Text>{address.city}, </Text>\n              <Text>{address.postal_code}</Text>\n            </View>\n            <Text>{address.country}</Text>\n            <Text>Numero de telefono: {address.phone}</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n  },\n  containerTitle: {\n    paddingBottom: 10,\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  address: {\n    borderWidth: 0.9,\n    borderRadius: 5,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    marginBottom: 15,\n  },\n  title: {\n    fontWeight: \"bold\",\n    paddingBottom: 5,\n  },\n  blockLine: {\n    flexDirection: \"row\",\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 30,\n  },\n  checked: {\n    borderColor: colors.primary,\n    backgroundColor: \"#0098d330\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}