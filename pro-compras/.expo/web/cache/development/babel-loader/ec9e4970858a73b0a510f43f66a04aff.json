{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Patricia\\\\Desktop\\\\Nueva carpeta\\\\pro-compras\\\\src\\\\screens\\\\Account\\\\ChangePassword.js\";\nimport React, { useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport StatusBar from \"../../components/StatusBar\";\nimport { updateUserApi } from \"../../api/user\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nimport { formStyle } from \"../../styles\";\nexport default function ChangePassword() {\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var navigation = useNavigation();\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function onSubmit(formData) {\n      var response;\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(updateUserApi(auth, formData));\n\n            case 4:\n              response = _context.sent;\n\n              if (!response.statusCode) {\n                _context.next = 7;\n                break;\n              }\n\n              throw \"Error al cambiar la contrase単a\";\n\n            case 7:\n              navigation.goBack();\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              Toast.show(_context.t0, {\n                position: Toast.positions.CENTER\n              });\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: colors.bgDark,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"Nueva contrase\\xF1a\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"password\", text);\n    },\n    secureTextEntry: true,\n    value: formik.values.password,\n    error: formik.errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Repetir nueva contrase\\xF1a\",\n    style: formStyle.input,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue(\"repeatPassword\", text);\n    },\n    secureTextEntry: true,\n    value: formik.values.repeatPassword,\n    error: formik.errors.repeatPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: formStyle.btnSucces,\n    onPress: formik.handleSubmit,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Cambiar contrase\\xF1a\")));\n}\n\nfunction initialValues() {\n  return {\n    password: \"\",\n    repeatPassword: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    password: Yup.string().min(4).required(true),\n    repeatPassword: Yup.string().min(4).oneOf([Yup.ref(\"password\")], true).required(true)\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Patricia/Desktop/Nueva carpeta/pro-compras/src/screens/Account/ChangePassword.js"],"names":["React","useState","useCallback","TextInput","Button","useNavigation","useFormik","Yup","Toast","StatusBar","updateUserApi","useAuth","colors","formStyle","ChangePassword","auth","loading","setLoading","navigation","formik","initialValues","validationSchema","object","onSubmit","formData","response","statusCode","goBack","show","position","positions","CENTER","bgDark","styles","container","input","text","setFieldValue","values","password","errors","repeatPassword","btnSucces","handleSubmit","string","min","required","oneOf","ref","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Toast from \"react-native-root-toast\";\nimport StatusBar from \"../../components/StatusBar\";\nimport { updateUserApi } from \"../../api/user\";\nimport useAuth from \"../../hooks/useAuth\";\nimport colors from \"../../styles/colors\";\nimport { formStyle } from \"../../styles\";\n\nexport default function ChangePassword() {\n  const { auth } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      try {\n        const response = await updateUserApi(auth, formData);\n        if (response.statusCode) throw \"Error al cambiar la contrase単a\";\n        navigation.goBack();\n      } catch (error) {\n        Toast.show(error, {\n          position: Toast.positions.CENTER,\n        });\n      }\n      setLoading(false);\n    },\n  });\n\n  return (\n    <>\n      <StatusBar backgroundColor={colors.bgDark} barStyle=\"light-content\" />\n      <View style={styles.container}>\n        <TextInput\n          label=\"Nueva contrase単a\"\n          style={formStyle.input}\n          onChangeText={(text) => formik.setFieldValue(\"password\", text)}\n          secureTextEntry\n          value={formik.values.password}\n          error={formik.errors.password}\n        />\n        <TextInput\n          label=\"Repetir nueva contrase単a\"\n          style={formStyle.input}\n          onChangeText={(text) => formik.setFieldValue(\"repeatPassword\", text)}\n          secureTextEntry\n          value={formik.values.repeatPassword}\n          error={formik.errors.repeatPassword}\n        />\n        <Button\n          mode=\"contained\"\n          style={formStyle.btnSucces}\n          onPress={formik.handleSubmit}\n          loading={loading}\n        >\n          Cambiar contrase単a\n        </Button>\n      </View>\n    </>\n  );\n}\n\nfunction initialValues() {\n  return {\n    password: \"\",\n    repeatPassword: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    password: Yup.string().min(4).required(true),\n    repeatPassword: Yup.string()\n      .min(4)\n      .oneOf([Yup.ref(\"password\")], true)\n      .required(true),\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}